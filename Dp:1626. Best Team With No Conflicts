/*1626. Best Team With No Conflicts
  Link: https://leetcode.com/problems/best-team-with-no-conflicts/description/
*/
class Solution {
public:
    int bestTeamScore(vector<int>& scores, vector<int>& ages) {
        vector<pair<int,int>>arr;
        int n=ages.size();
        for(int i=0;i<n;i++){
            arr.push_back({ages[i],scores[i]});
        }
        sort(arr.begin(),arr.end());
        vector<int>dp(n+1,0);
        // dp[0]=arr[0].second;
        for(int i=0;i<n;i++){
            dp[i+1]=arr[i].second;
        }
        int ans=0;
        for(int i=1;i<=n;i++){
            cout<<arr[i-1].first<<" "<<arr[i-1].second<<endl;
            for(int j=1;j<i;j++){
                if( arr[j-1].second<=arr[i-1].second){
                    dp[i]=max(dp[i],dp[j]+arr[i-1].second);
                }
            }
            ans=max(ans,dp[i]);
        }
        return ans; 
    }
};
