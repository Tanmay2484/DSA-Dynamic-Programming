/* Subsequence Pattern Matching or Is Subsequence [ LEETCODE ]
 Link : https://leetcode.com/problems/is-subsequence/
*/
class Solution {
public:
    bool isSubsequence(string s, string t) {
        int m=s.size(),n=t.size();
        int dp[m+1][n+1];
        
        for(int i=0;i<=m;i++){
            for(int j=0;j<=n;j++){
                if(i==0 || j==0){
                    dp[i][j]=0;
                }
                else if(s[i-1]==t[j-1]){
                    dp[i][j]=dp[i-1][j-1]+1;
                }
                else{
                    dp[i][j]=max(dp[i-1][j],dp[i][j-1]);
                }
            }
        }
        if(m==dp[m][n]) 
            return true;    /* because lcs will be the a longest common subsequence*/
        return false;
    }
};
